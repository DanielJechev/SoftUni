package com.company;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Map<String,Integer> first=new LinkedHashMap<>();

        String command=scanner.nextLine();
        while (!"Log out".equals(command)){
            String[] tokens=command.split(": ");
            String input=tokens[0];
            if ("New follower".equals(input)){
                String username=tokens[1];
                if (!first.containsKey(username)){
                    first.put(username,0);

                }


            }else if ("Like".equals(input)){
                String username=tokens[1];
                int likes=Integer.parseInt(tokens[2]);
                if (!first.containsKey(username)){
                    first.put(username,likes);
                }else {
                    int old=first.get(username);
                    first.put(username,old+likes);
                }

            }else if ("Comment".equals(input)){
                String username=tokens[1];
                if (!first.containsKey(username)){
                    first.put(username,1);
                }else {
                    int old=first.get(username);
                    first.put(username,old+1);
                }



            }else if ("Blocked".equals(input)){
                String username=tokens[1];
                if (first.containsKey(username)){
                    first.clear();
                }else {
                    System.out.printf("%s doesn't exist.%n",username);
                }

            }





            command=scanner.nextLine();
        }
        System.out.println(first.size() + " followers");

        LinkedHashMap<String, Integer> countOfMessages = new LinkedHashMap<>();

        for (Map.Entry<String, Integer> entry : first.entrySet()) {
            countOfMessages.put(entry.getKey(), entry.getValue());
        }

        for (Map.Entry<String, Integer> entry : first.entrySet()) {
            countOfMessages.put(entry.getKey(), countOfMessages.get(entry.getKey()) );
        }


        LinkedHashMap<String, Integer> sorted = new LinkedHashMap<>();
        sorted = first
                .entrySet()
                .stream()
                .sorted((a, b) -> {
                    int result = b.getValue().compareTo(a.getValue());
                    if (result == 0) {
                        result = a.getKey().compareTo(b.getKey());
                    }
                    return result;
                }).collect(
                        Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e2,
                                LinkedHashMap::new));


        for (Map.Entry<String, Integer> entry : sorted.entrySet()) {
            String username = entry.getKey();
            int messages = countOfMessages.get(username);
            System.out.printf("%s: %d", username,messages).println();
        }











    }

}