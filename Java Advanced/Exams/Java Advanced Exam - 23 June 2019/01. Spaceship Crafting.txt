package com.company;
import javafx.collections.transformation.SortedList;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        ArrayDeque<Integer> queue = new ArrayDeque<>();
        ArrayDeque<Integer> stack = new ArrayDeque<>();
        Arrays.stream(reader.readLine().split(" ")).mapToInt(Integer::parseInt).forEach(queue::offer);
        Arrays.stream(reader.readLine().split(" ")).mapToInt(Integer::parseInt).forEach(stack::push);
        int glass = 0;
        int aluminii = 0;
        int lithium = 0;
        int carbon = 0;
        Map<String,Integer> materials = new TreeMap<>();

        materials.put("Glass",glass);
        materials.put("Aluminium",aluminii);
        materials.put("Lithium",lithium);
        materials.put("Carbon fiber",carbon);

        while (!queue.isEmpty() && !stack.isEmpty()) {
            int num = queue.poll();
            int number = stack.pop();
            int sum = num + number;
            if (sum == 25) {
                materials.put("Glass",materials.get("Glass")+1);
            } else if (sum == 50) {
                materials.put("Aluminium",materials.get("Aluminium")+1);
            } else if (sum == 75) {
                materials.put("Lithium",materials.get("Lithium")+1);
            } else if (sum == 100) {
                materials.put("Carbon fiber",materials.get("Carbon fiber")+1);
            } else {
                stack.push(number + 3);
            }

        }
        if (materials.get("Glass")>=1&&materials.get("Aluminium")>=1&&materials.get("Lithium")>=1&&materials.get("Carbon fiber")>=1){
            System.out.println("Wohoo! You succeeded in building the spaceship!");
        }else {
            System.out.println("Ugh, what a pity! You didn't have enough materials to build the spaceship.");
        }






        if (queue.isEmpty()) {
            System.out.println("Liquids left: none");
        }
        if (stack.isEmpty()) {
            System.out.println("Physical items left: none");
        }

        if (!stack.isEmpty()) {
            System.out.print("Physical items left: ");
            while (!stack.isEmpty()) {
                if (stack.size() == 1) {
                    System.out.print(stack.pop());
                } else {
                    System.out.print(stack.pop() + ", ");
                }

            }
            System.out.println();
        }
        if (!queue.isEmpty()) {
            System.out.print("Physical items left: ");
            while (!queue.isEmpty()) {
                if (queue.size() == 1) {
                    System.out.print(queue.pop());

                } else {
                    System.out.print(queue.pop() + ", ");
                }
            }
            System.out.println();
        }
        for (Map.Entry<String,Integer>kvp:materials.entrySet()) {
            System.out.println(kvp.getKey() + ": " + kvp.getValue());
        }
    }



}